<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<parent>
		<groupId>nl.tud.tbm.normnets</groupId>
		<artifactId>normnets</artifactId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<groupId>nl.tud.tbm.normnets</groupId>
	<artifactId>transformation</artifactId>
	<packaging>jar</packaging>
	<version>1.0.0-SNAPSHOT</version>
	<name>transformation</name>
	<description>A transformation tool for converting normnet ML to CPN and SociaalML to normnet ML</description>
	<url>http://grasia.fdi.ucm.es/sociaal</url>

 <scm>
        <connection>scm:git:git://github.com/escalope/NormMonitor.git</connection>
        <developerConnection>scm:git:git@github.com:escalope/NormMonitor.git</developerConnection>
        <url>https://github.com/escalope/NormMonitor</url>		
    </scm>

	<licenses>
		<license>
			<name>The GPL V3</name>
			<url>http://www.gnu.org/copyleft/gpl.html</url>
			<distribution />
		</license>
	</licenses>
	<developers>
	  <developer>
      <id>jie</id>
      <name>Jie Jiang</name>
      <email>jie.jiang@tudelft.nl</email>
    </developer>
     <developer>
      <id>huib</id>
      <name>Huib Aldewereld</name>
      <email>h.m.aldewereld@tudelft.nl</email>
    </developer>
    <developer>
      <id>escalope</id>
      <name>Jorge Gomez-Sanz</name>
      <email>jjgomez@fdi.ucm.es</email>
    </developer>
	</developers>

	<dependencies>
		<dependency>
			<groupId>nl.tud.tbm.normnets</groupId>
			<artifactId>editor</artifactId>
			<version>1.0.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.doxia</groupId>
			<artifactId>doxia-module-markdown</artifactId>
			<version>1.5</version>
		</dependency>

<!-- needed by CPN-->
		<dependency>
			<groupId>org.eclipse.emf</groupId>
			<artifactId>org.eclipse.emf.ecore</artifactId>
			<version>2.10.0-v20140514-1158</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.emf</groupId>
			<artifactId>org.eclipse.emf.common</artifactId>
			<version>2.10.0-v20140514-1158</version>
		</dependency>

		<dependency>
			<groupId>org.cpntools.accesscpn</groupId>
			<artifactId>cosimulation</artifactId>
			<version>2.2.0</version>
		</dependency>

		<dependency>
			<groupId>org.cpntools.accesscpn</groupId>
			<artifactId>engine</artifactId>
			<version>2.2.0</version>
		</dependency>


		<dependency>
			<groupId>org.cpntools.accesscpn</groupId>
			<artifactId>highlevel</artifactId>
			<version>2.2.0</version>
		</dependency>

		<dependency>
			<groupId>org.cpntools.accesscpn</groupId>
			<artifactId>proxy</artifactId>
			<version>2.2.0</version>
		</dependency>

		<dependency>
			<groupId>org.cpntools.accesscpn</groupId>
			<artifactId>model</artifactId>
			<version>2.2.0</version>
		</dependency>

		<dependency>
			<groupId>org.cpntools.accesscpn</groupId>
			<artifactId>exporter</artifactId>
			<version>2.2.0</version>
		</dependency>

		<dependency>
			<groupId>org.cpntools.accesscpn</groupId>
			<artifactId>importer</artifactId>
			<version>2.2.0</version>
		</dependency>



		<dependency>
			<groupId>net.sf.sociaal</groupId>
			<artifactId>sociaalmled</artifactId>
			<version>${sociaalml.version}</version>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>net.sf.ingenme</groupId>
					<artifactId>ingened</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.10</version>
		</dependency>

	</dependencies>

	<profiles>
		<profile>
			<id>release-sign-artifacts</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>1.1</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<distributionManagement>
		<site>
			<id>website</id>
			<url>file:target/finalsite</url>
		</site>
	</distributionManagement>

	<build>
		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<optimize>true</optimize>
					<showDeprecations>true</showDeprecations>
					<encoding>ISO-8859-1</encoding>
				</configuration>
			</plugin>

			<!-- and now, the generated sources and resources are included in the 
				build -->
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<siteDirectory>${project.basedir}/target/dochtml</siteDirectory>
				</configuration>
			</plugin>
			<!-- It generates the documentation associated wiht the metamodel in each 
				submodule -->
			
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.0</version>
				<executions>
					<!-- The needed resources do belong to another project -->
					<!-- Suggestion from http://stackoverflow.com/questions/4177327/maven-copying-resources-from-client-project-to-webapp -->
					<execution>
						<id>build-classpath</id>
						<phase>validate</phase>
						<goals>
							<goal>build-classpath</goal>
						</goals>
						<configuration>
							<outputFile>target/classpath.txt</outputFile>
							<artifactItems>
								<artifactItem>
									<excludes>ingened</excludes>
								</artifactItem>
							</artifactItems>
							<!-- configure the plugin here -->
						</configuration>
					</execution>
				</executions>
			</plugin>


			
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->

				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<!-- copy-dependency plugin -->
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>copy-dependencies</goal>
											<goal>build-classpath</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
										<!-- to avoid errors in the eclipse m2e plugin -->
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>exec-maven-plugin</artifactId>
										<versionRange>[1.0,)</versionRange>
										<goals>
											<goal>java</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>build-helper-maven-plugin</artifactId>
										<versionRange>[1.8,)</versionRange>
										<goals>
											<goal>add-resource</goal>
											<goal>add-source</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>

			</plugins>
		</pluginManagement>
	</build>

</project>
